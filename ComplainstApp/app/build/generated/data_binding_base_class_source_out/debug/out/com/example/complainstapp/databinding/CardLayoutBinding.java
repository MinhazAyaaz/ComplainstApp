// Generated by view binder compiler. Do not edit!
package com.example.complainstapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.complainstapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final MaterialCardView card;

  @NonNull
  public final TextView cardAgainst;

  @NonNull
  public final TextView cardDescription;

  @NonNull
  public final TextView cardSubTitleHeading;

  @NonNull
  public final TextView cardTitle;

  @NonNull
  public final MaterialButton deleteButton;

  @NonNull
  public final MaterialButton editButton;

  private CardLayoutBinding(@NonNull CardView rootView, @NonNull MaterialCardView card,
      @NonNull TextView cardAgainst, @NonNull TextView cardDescription,
      @NonNull TextView cardSubTitleHeading, @NonNull TextView cardTitle,
      @NonNull MaterialButton deleteButton, @NonNull MaterialButton editButton) {
    this.rootView = rootView;
    this.card = card;
    this.cardAgainst = cardAgainst;
    this.cardDescription = cardDescription;
    this.cardSubTitleHeading = cardSubTitleHeading;
    this.cardTitle = cardTitle;
    this.deleteButton = deleteButton;
    this.editButton = editButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card;
      MaterialCardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.cardAgainst;
      TextView cardAgainst = ViewBindings.findChildViewById(rootView, id);
      if (cardAgainst == null) {
        break missingId;
      }

      id = R.id.cardDescription;
      TextView cardDescription = ViewBindings.findChildViewById(rootView, id);
      if (cardDescription == null) {
        break missingId;
      }

      id = R.id.cardSubTitleHeading;
      TextView cardSubTitleHeading = ViewBindings.findChildViewById(rootView, id);
      if (cardSubTitleHeading == null) {
        break missingId;
      }

      id = R.id.cardTitle;
      TextView cardTitle = ViewBindings.findChildViewById(rootView, id);
      if (cardTitle == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      MaterialButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      MaterialButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      return new CardLayoutBinding((CardView) rootView, card, cardAgainst, cardDescription,
          cardSubTitleHeading, cardTitle, deleteButton, editButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
